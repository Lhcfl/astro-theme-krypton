---
import type { CollectionEntry } from "astro:content";
import Layout from "./Layout.astro";
import PostMeta from "@/components/PostMeta.astro";
import { generateDescription } from "@/utils/gen-description";

type Props = {
  post: CollectionEntry<"blog">;
  hasSidebar?: boolean;
};

const { post, hasSidebar = false } = Astro.props;
const { title, date } = post.data;
const description = await generateDescription(post);
---

<Layout
  title={title || date.toLocaleDateString()}
  description={description}
  image={post.data.thumbnail}
  maxw={hasSidebar ? "max-w-280" : undefined}
  class="xl:max-w-300"
  bodyClass={hasSidebar ? "has-sidebar" : undefined}
>
  <div class="blog-post-container flex gap-4 w-full">
    <article class="blog-post flex-grow-1 card card-lg md:shadow-sm rounded-lg">
      <div class="md:card-body">
        <div class="article-body">
          <div class="post-title text-4xl font-bold">
            <h1>{title}</h1>
          </div>
          <div class="markdown-body is-detailed">
            <slot />
          </div>
          <hr />
          <PostMeta class="mt-4" post={post} />
        </div>
      </div>
    </article>
    {
      hasSidebar && (
        <div class="sidebar hidden md:block md:relative">
          <nav class="sidebar-card bg-base-100 card shadow-sm h-fit sticky top-(--main-pt) overflow-auto">
            <div class="card-body">
              <div class="min-w-50 w-fit xl:min-w-70">
                <slot name="sidebar" />
              </div>
            </div>
          </nav>
        </div>
      )
    }
  </div>
</Layout>

<style lang="scss">
  @reference "../styles/tailwind.css";
  nav.sidebar-card {
    max-height: calc(100vh - var(--main-pt) - var(--spacing) * 4);
  }
  :global(body.show-toc) .sidebar {
    display: block;
    animation: fadeInUp 0.3s ease-in-out;
    @apply fixed w-full bottom-2;
  }
</style>
